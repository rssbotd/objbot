#!/usr/bin/env python3
# This file is placed in the Public Domain.
# pylint: disable=C0413,W0611


"prompt"


import os
import readline
import sys
import termios
import time


sys.path.insert(0, os.getcwd())


from objx.default import Default
from objt.errors import Errors
from objt.thread import launch
from objz.console import Console
from objz.parse   import parse
from objz.log     import debug
from objz.utils   import forever, modnames


from objbot.config  import Config
from objbot.modules import face


Cfg = Config()
Cfg.mod = "cmd,err,mod,thr"


class Prompt(Console):

    def raw(self, txt):
        print(txt)


def banner():
    tme = time.ctime(time.time())
    debug(f"{Cfg.name.upper()} since {tme}")


def init(modstr, *pkgs, disable=None):
    "scan modules for commands and classes"
    thrs = []
    for mod in spl(modstr):
        if disable and mod in spl(disable):
            continue
        for pkg in pkgs:
            modi = getattr(pkg, mod, None)
            if not modi:
                continue
            if "init" not in dir(modi):
                continue
            launch(modi.init)
            break
    return thrs


def wrap(func):
    "reset console."
    old3 = None
    try:
        old3 = termios.tcgetattr(sys.stdin.fileno())
    except termios.error:
        pass
    try:
        func()
    except (KeyboardInterrupt, EOFError):
        pass
    finally:
        if old3:
            termios.tcsetattr(sys.stdin.fileno(), termios.TCSADRAIN, old3)




def main():
    "main"
    parse(Cfg, " ".join(sys.argv[1:]))
    if "v" in Cfg.opts:
        enable(print)
        banner()
    if "i" in Cfg.opts:
        Cfg.mod = ",".join(modnames(face))
        for thr in init(Cfg.mod, face):
            thr.join()
    csl = Prompt()
    csl.start()
    forever()


if __name__ == "__main__":
    wrap(main)
    for exc in Errors.errors:
        print(Errors.format(exc))
    print("\nno errors")
